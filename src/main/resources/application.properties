#database to be used for development and testing
#spring.datasource.url=jdbc:postgresql://localhost:5432/portfolio
#spring.datasource.username=vikie
#spring.datasource.password=victorMwas1

#database to be injected later for security
 spring.datasource.url=${JDBC_DATABASE_URL}
 spring.datasource.username=${JDBC_DATABASE_USERNAME}
 spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.show-sql=true

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

##Mail sending api
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=mwangivictor52@gmail.com
#inject gmail service password too for security
spring.mail.password=${EMAIL_PASS}
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.connectionTimeout = 5000
spring.mail.properties.mail.smtp.timeout = 5000
spring.mail.properties.mail.smtp.writeTimeout = 5000
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.starttls.enable = true
#spring.mail.properties.mail.smtp.socketFactory.fallback = false

#Adding http2 support
server.http2.enabled=true
